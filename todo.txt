
A Supply Chain Manager at warehouse is reviewing the logs of when trucks arrived at and departed from their warehouse. Please help them with their review by completing the following challenge: Given a collection of time intervals, [start, end], merge and return the overlapping intervals sorted in ascending order of their start times.

Example

intervals = [[7, 7], [2, 3], [6, 11], [1, 2]]
The interval [1, 2] merges with [2, 3] while [7, 7] merges with [6, 11]. There are no more overlapping intervals. The answer is [[1, 3], [6, 11]].

Function Description
Complete the function getMergedIntervals in the editor below.

 
getMergedIntervals has the following parameter(s):
    int intervals[[n][2]]:  the time intervals
Returns
    int[][2]: the merged intervals in sorted order

Constraints

1 ≤ n ≤ 105
1 ≤ intervals[i][2] ≤ 109
intervals[i][0] ≤ intervals[i][1] for all i.



### 
As part of your Day 1 orientation, your new team is hosting a programming challenge. You've been asked to participate in completing the following task. Given an array of integers, perform certain operations in order to satisfy some constraints. The constraints are as follows:
The first array element must be 1.

For all other elements, the difference between adjacent integers must not be greater than 1. In other words, for 1 ≤ i < n, arr[i] - arr[i-1] ≤ 1.

To accomplish this, the following operations are available:

Rearrange the elements in any way.
Reduce any element to any number that is at least 1.
What is the maximum value that can be achieved for the final element of the array by following these operations and constraints?

 
Example
arr = [3, 1, 3, 4]

Subtract 1 from the first element, making the array [2, 1, 3, 4].
Rearrange the array into [1, 2, 3, 4].
The final element's value is 4, the maximum value that can be achieved. Therefore, the answer is 4.
 
Function Description

getMaxValue has the following parameter:
    int arr[n]:  an array of integers
Returns:
    int: the maximum value that can be achieved for the final element of the array given the conditions above

 

Constraints
1 ≤ n ≤ 10^5
1 ≤ arr[i] ≤ 10^9